/*****************************************************************************/
/*                NCUP -- Shanghai Huateng Software System Inc.              */
/*****************************************************************************/
/* PROGRAM NAME: DbsIpcDft.pc                                                */
/* DESCRIPTIONS:                                                             */
/*****************************************************************************/
/*                             MODIFICATION LOG                              */
/* DATE        PROGRAMMER     DESCRIPTION                                    */
/*                                                                           */
/*****************************************************************************/

EXEC SQL include sqlca;
EXEC SQL include sqlda;

#include "DbsDef.h"
#include "batch.h"

extern  char    gLogFile[LOG_NAME_LEN_MAX];
EXEC SQL BEGIN DECLARE SECTION;
    struct TBL_ipc_dft_Def
    {
        int    usage_key;
        int    ipc_dft_index;
        int    pos_index;
        int    fld_index;
        int    fld_len;
        char    fld_val[601];
    } ltTblIpcDft;
EXEC SQL END DECLARE SECTION;

int DbsIPCDFT( int vnOprType, struct TBL_ipc_dft_Def *vtpTblIpcDft)
{

    HtMemcpy(
        &ltTblIpcDft,
        vtpTblIpcDft,
        sizeof(ltTblIpcDft));
    switch(vnOprType)
    {
    case DBS_CURSOR:
        EXEC SQL DECLARE
            cur_ipc_dft_1
        CURSOR FOR SELECT
            usage_key,
            ipc_dft_index,
            pos_index,
            fld_index,
            fld_len,
               fld_val
        FROM
            ht_tbl_ipc_dft
        WHERE
            usage_key = :ltTblIpcDft.usage_key and
            ipc_dft_index = :ltTblIpcDft.ipc_dft_index
        ORDER BY
            usage_key,
            ipc_dft_index,
            pos_index
        ;
        return LUsrErrNull;

    case DBS_OPEN:
        EXEC SQL OPEN
            cur_ipc_dft_1;
        return sqlca.sqlcode;

    case DBS_FETCH:
        EXEC SQL FETCH
            cur_ipc_dft_1
        INTO
            :ltTblIpcDft.usage_key,
            :ltTblIpcDft.ipc_dft_index,
            :ltTblIpcDft.pos_index,
            :ltTblIpcDft.fld_index,
            :ltTblIpcDft.fld_len,
            :ltTblIpcDft.fld_val;
        HtMemcpy(
            vtpTblIpcDft,
            &ltTblIpcDft,
            sizeof(*vtpTblIpcDft));
        if(sqlca.sqlcode == DBS_FETCHNULL)
        {
            sqlca.sqlcode = 0;
        }
        return sqlca.sqlcode;

    case DBS_CLOSE:
        EXEC SQL CLOSE
            cur_ipc_dft_1;
        return sqlca.sqlcode;

    default:
        return NO_SWITCH;
    } /* end of switch */
} /* end of DbsIPCDFT */

