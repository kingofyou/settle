/*****************************************************************************/
/*                NCUP -- Shanghai Huateng Software System Inc.              */
/*****************************************************************************/
/* PROGRAM NAME: DbsOprInf.pc                                            */
/* DESCRIPTIONS:                                                             */
/*****************************************************************************/
/*                             MODIFICATION LOG                              */
/* DATE        PROGRAMMER     DESCRIPTION                                    */
/*                                                                           */
/*****************************************************************************/

#include <stdlib.h>
#include <string.h>
#include "DbsDef.h"
#include "batch.h"

extern    char    gLogFile[LOG_NAME_LEN_MAX];

EXEC SQL include sqlca;
EXEC SQL include sqlda;

EXEC SQL BEGIN DECLARE SECTION;
struct ht_tbl_algo_ctl_tab
{
char bus_tp	    [8+1];
char txn_num	    [8+1];
char bus_name	    [80+1];
char txn_name	    [80+1];
char c_d_flag	  [1+1];
char stlm_flag	  [10+1];
char rec_upd_opr  [11+1];
char rec_crt_ts	[14+1];
char rec_upd_ts	[14+1];
}vtbl_algo_ctl;
static int nTotalNum = 0;
char    sSqlBuf[128];
static int  nReturnCode;
short db_ind;
static int  ptnBeginOffset;
static int  ptnEndOffset;
EXEC SQL END DECLARE SECTION;

int DbsTblAlgoCtl(int vnOprType, struct ht_tbl_algo_ctl_tab *ptbl_algo_ctl, int nBeginOffset, int nEndOffset)
{
    ptnBeginOffset = nBeginOffset;
    ptnEndOffset = nEndOffset;
    memset(&vtbl_algo_ctl, 0x00, sizeof(vtbl_algo_ctl));
    memcpy(&vtbl_algo_ctl, ptbl_algo_ctl, sizeof(vtbl_algo_ctl));

    switch(vnOprType)
    {
    case DBS_SELECT:
            EXEC SQL
                select 
                    bus_tp	        ,
                    txn_num       ,
                    bus_name,
                    txn_name,
                    c_d_flag	,
                    stlm_flag	,
                    rec_upd_opr ,
                    rec_crt_ts	,
                    rec_upd_ts	
                into
                    :vtbl_algo_ctl.bus_tp :db_ind,
                    :vtbl_algo_ctl.txn_num :db_ind,
                    :vtbl_algo_ctl.bus_name :db_ind,
                    :vtbl_algo_ctl.txn_name :db_ind,
                    :vtbl_algo_ctl.c_d_flag :db_ind,
                    :vtbl_algo_ctl.stlm_flag :db_ind,
                    :vtbl_algo_ctl.rec_upd_opr :db_ind,
                    :vtbl_algo_ctl.rec_crt_ts :db_ind,
                    :vtbl_algo_ctl.rec_upd_ts :db_ind	
                from 
                    ht_tbl_algo_ctl
               where
                    bus_tp = :vtbl_algo_ctl.bus_tp and 
                    txn_num = :vtbl_algo_ctl.txn_num
                    ;
        HtMemcpy(ptbl_algo_ctl, &vtbl_algo_ctl, sizeof(vtbl_algo_ctl));
        return sqlca.sqlcode;
           
    case DBS_CURSOR:
        EXEC SQL DECLARE tbl_algo_ctl_cur CURSOR FOR
            SELECT
                    bus_tp	        ,
                    txn_num       ,
                    bus_name,
                    txn_name,
                    c_d_flag	,
                    stlm_flag	,
                    rec_upd_opr ,
                    rec_crt_ts	,
                    rec_upd_ts	
            FROM
                ht_tbl_algo_ctl;
        return sqlca.sqlcode;

    case DBS_OPEN:
        EXEC SQL OPEN
            tbl_algo_ctl_cur;
        return sqlca.sqlcode;

    case DBS_FETCH:
        EXEC SQL FETCH tbl_algo_ctl_cur
        INTO
                :vtbl_algo_ctl.bus_tp :db_ind,
                :vtbl_algo_ctl.txn_num :db_ind,
                :vtbl_algo_ctl.bus_name :db_ind,
                :vtbl_algo_ctl.txn_name :db_ind,
                :vtbl_algo_ctl.c_d_flag :db_ind,
                :vtbl_algo_ctl.stlm_flag :db_ind,
                :vtbl_algo_ctl.rec_upd_opr :db_ind,
                :vtbl_algo_ctl.rec_crt_ts :db_ind,
                :vtbl_algo_ctl.rec_upd_ts	 :db_ind
        ;
        memcpy(ptbl_algo_ctl, &vtbl_algo_ctl, sizeof(vtbl_algo_ctl));
        return sqlca.sqlcode;

    case DBS_CLOSE:
        EXEC SQL CLOSE
            tbl_algo_ctl_cur;
        return sqlca.sqlcode;
        
    default:
        return NO_SWITCH;
    } /* end of switch */
}

