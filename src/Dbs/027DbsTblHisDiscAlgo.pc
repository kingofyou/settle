/*****************************************************************************/
/*                NCUP -- Shanghai Huateng Software System Inc.              */
/*****************************************************************************/
/* PROGRAM NAME: DbsOprInf.pc                                            */
/* DESCRIPTIONS:                                                             */
/*****************************************************************************/
/*                             MODIFICATION LOG                              */
/* DATE        PROGRAMMER     DESCRIPTION                                    */
/*                                                                           */
/*****************************************************************************/

#include <stdlib.h>
#include <string.h>
#include "DbsDef.h"
#include "batch.h"

extern    char    gLogFile[LOG_NAME_LEN_MAX];

EXEC SQL include sqlca;
EXEC SQL include sqlda;

EXEC SQL BEGIN DECLARE SECTION;
struct ht_tbl_his_disc_algo_tab
{
char         disc_id	  [5 + 1];
char         tran_code	  [4 + 1];
char         mcht_no	  [15 + 1];
char       card_type	  [4 + 1];
double floor_amount	 ;
double upper_amount	 ;
char       fee_flag	 [1 + 1];
double     fee_value	;
double       fee_min	;
double       fee_max	;
char  rec_upd_usr_id	   [10 + 1];
char     rec_upd_ts	 [14 + 1];
char     rec_crt_ts	 [14 + 1];
}vtbl_his_disc_algo;
static int nTotalNum = 0;
char    sSqlBuf[128];
static int  nReturnCode;
short db_ind;
static int  ptnBeginOffset;
static int  ptnEndOffset;
EXEC SQL END DECLARE SECTION;

int DbsTblHisDiscAlgo(int vnOprType, struct ht_tbl_his_disc_algo_tab *ptbl_his_disc_algo, int nBeginOffset, int nEndOffset)
{
    ptnBeginOffset = nBeginOffset;
    ptnEndOffset = nEndOffset;
    memset(&vtbl_his_disc_algo, 0x00, sizeof(vtbl_his_disc_algo));
    memcpy(&vtbl_his_disc_algo, ptbl_his_disc_algo, sizeof(vtbl_his_disc_algo));

    switch(vnOprType)
    {
    case DBS_SELECT:
            EXEC SQL
                select 
                    disc_id,
                    tran_code,
                    mcht_no,
                    card_type,
                    floor_amount	,
                    upper_amount	,
                    fee_flag	,
                    fee_value,
                    fee_min,
                    fee_max,
                    rec_upd_usr_id,
                    rec_upd_ts	,
                    rec_crt_ts	
                into
                    :vtbl_his_disc_algo.disc_id :db_ind,
                    :vtbl_his_disc_algo.tran_code :db_ind,
                    :vtbl_his_disc_algo.mcht_no :db_ind,
                    :vtbl_his_disc_algo.card_type :db_ind,
                    :vtbl_his_disc_algo.floor_amount :db_ind,
                    :vtbl_his_disc_algo.upper_amount	 :db_ind,
                    :vtbl_his_disc_algo.fee_flag :db_ind,
                    :vtbl_his_disc_algo.fee_value :db_ind,
                    :vtbl_his_disc_algo.fee_min :db_ind,
                    :vtbl_his_disc_algo.fee_max :db_ind,
                    :vtbl_his_disc_algo.rec_upd_usr_id :db_ind,
                    :vtbl_his_disc_algo.rec_upd_ts :db_ind,
                    :vtbl_his_disc_algo.rec_crt_ts :db_ind	
                from 
                    HT_TBL_HIS_DISC_ALGO@PUBLIC_DATA
               where
                    tran_code = :vtbl_his_disc_algo.tran_code and 
                    MCHT_NO = :vtbl_his_disc_algo.mcht_no and 
                    CARD_TYPE = :vtbl_his_disc_algo.card_type 
                    ;
        HtMemcpy(ptbl_his_disc_algo, &vtbl_his_disc_algo, sizeof(vtbl_his_disc_algo));
        return sqlca.sqlcode;
           
    case DBS_CURSOR:
        EXEC SQL DECLARE tbl_his_disc_algo_cur CURSOR FOR
            SELECT
                    disc_id,
                    tran_code,
                    mcht_no,
                    card_type,
                    floor_amount	,
                    upper_amount	,
                    fee_flag	,
                    fee_value,
                    fee_min,
                    fee_max,
                    rec_upd_usr_id,
                    rec_upd_ts	,
                    rec_crt_ts
            FROM
                HT_TBL_HIS_DISC_ALGO@PUBLIC_DATA;
        return sqlca.sqlcode;

    case DBS_OPEN:
        EXEC SQL OPEN
            tbl_his_disc_algo_cur;
        return sqlca.sqlcode;

    case DBS_FETCH:
        EXEC SQL FETCH tbl_his_disc_algo_cur
        INTO
                :vtbl_his_disc_algo.disc_id :db_ind,
                :vtbl_his_disc_algo.tran_code :db_ind,
                :vtbl_his_disc_algo.mcht_no :db_ind,
                :vtbl_his_disc_algo.card_type,
                :vtbl_his_disc_algo.floor_amount :db_ind,
                :vtbl_his_disc_algo.upper_amount :db_ind,
                :vtbl_his_disc_algo.fee_flag :db_ind,
                :vtbl_his_disc_algo.fee_value :db_ind,
                :vtbl_his_disc_algo.fee_min :db_ind,
                :vtbl_his_disc_algo.fee_max :db_ind,
                :vtbl_his_disc_algo.rec_upd_usr_id :db_ind,
                :vtbl_his_disc_algo.rec_upd_ts :db_ind,
                :vtbl_his_disc_algo.rec_crt_ts	 :db_ind
        ;
        memcpy(ptbl_his_disc_algo, &vtbl_his_disc_algo, sizeof(vtbl_his_disc_algo));
        return sqlca.sqlcode;

    case DBS_CLOSE:
        EXEC SQL CLOSE
            tbl_his_disc_algo_cur;
        return sqlca.sqlcode;
        
    default:
        return NO_SWITCH;
    } /* end of switch */
}
